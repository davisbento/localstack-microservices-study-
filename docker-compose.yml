version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - USER_SERVICE_HOST=user-service
      - USER_SERVICE_PORT=3001
    volumes:
      - ./apps/api-gateway:/app/apps/api-gateway
      - /app/apps/api-gateway/node_modules
    depends_on:
      - user-service
    networks:
      - microservices-network

  user-service:
    build:
      context: .
      dockerfile: apps/user-service/Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - PORT=3001
    volumes:
      - ./apps/user-service:/app/apps/user-service
      - /app/apps/user-service/node_modules
    networks:
      - microservices-network

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - '4566:4566' # LocalStack Gateway
      - '4510-4559:4510-4559' # external services port range
    environment:
      - DEBUG=0
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_EXECUTOR=docker
      - PERSISTENCE=1
      - AWS_DEFAULT_REGION=us-east-1
      - SERVICES=apigateway,lambda,dynamodb,s3,sqs,sns,ses,cloudfront
      - ACTIVATE_PRO=0
    volumes:
      - '${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'

networks:
  microservices-network:
    driver: bridge
  default:
    name: localstack-network
